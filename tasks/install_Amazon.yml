---
- name: "Install repos epel, rpmfusion"
  yum:
    name: [https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm,https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm]
    state: present
#    update_cache: yes

- name: "Install the 'Development tools'"
  yum:
    name: ["@Development tools",cmake,gtk2-devel,pkgconfig]
    state: present

- name: "amazon-linux-extras add repo postgresql10"
  shell: amazon-linux-extras install -y postgresql10
  args:
    executable: /bin/bash

- name: "Install ENV.INFRA for Funkwhale"
  package:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - postgresql-server
    - postgresql-devel
    - postgresql-contrib
    - redis
    - nginx

- name: "Install dependeies packages for Funkwhale"
  package:
    name: "{{ item }}"
    state: present
  loop:
#    - python3-virtualenv
#    - python-virtualenv
#    - python-devel
    - python3-devel
    - openldap-devel
    - https://rpmfind.net/linux/centos/7.9.2009/os/x86_64/Packages/libva-1.8.3-1.el7.x86_64.rpm
    - ffmpeg
    - ffmpeg-devel
    - libjpeg-turbo-devel
    - file-devel
    - libpqxx-devel
    #- python-psycopg2
    #- python3-psycopg2

- name: "Install pip: psycopg2"
  ansible.builtin.pip:
    name: psycopg2
    executable: pip3

### config.yml
- name: "Find out if PostgreSQL is initialized"
  ansible.builtin.stat:
    path: "/var/lib/pgsql/data/PG_VERSION"
  register: postgres_data

- name: "Initialize PostgreSQL"
  shell: "postgresql-setup initdb"
  when: not postgres_data.stat.exists

- name: "Restart SystemD unit postgresql10"
  ansible.builtin.systemd:
    state: started
    name: postgresql
    enabled: yes

- name: "Revoke access from local user postgres on database all"
  community.postgresql.postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: local
    users: postgres
    databases: all
    method: peer
    state: absent

- name: Revoke access from local user mary on database mydb.
  community.postgresql.postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: host
    users: all
    databases: all
    address: "{{ item }}"
    method: md5
    state: absent
  loop:
    - "127.0.0.1/32"
    - "::1/128"

- name: "Grant user postgres"
  postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: local
    users: postgres
    databases: all
    method: trust
    create: true

- name: "Grant user funkwhale"
  postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: host
    users: all
    source: "{{ item }}"
    databases: all
    method: trust
    create: true
  loop:
      - "127.0.0.1/32"
      - "::1/128"

- name: "Restart SystemD unit postgresql10"
  ansible.builtin.systemd:
    state: restarted
    name: postgresql
    enabled: yes

- name: "Create database for app.funkwhale"
  postgresql_db:
    name: "{{ item }}"
    state: present
    encoding: UTF-8
    template: template0
  loop:
    - funkwhale
    - funkwhale_database

- name: "Create db user"
  postgresql_user:
    state: present
    name: funkwhale
    password: ""
    role_attr_flags: SUPERUSER

- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ item }}"
    roles: funkwhale
    grant_option: yes
    privs: all
  loop:
    - funkwhale
    - funkwhale_database

- name: "Configure front reverse-proxy.nginx"
  template:
    src: funkwhale.conf.j2
    dest: "/etc/nginx/conf.d/funkwhale.conf"
  tags: molecule-notest