---
- name: "Install dependeies packages for Funkwhale"
  package:
    name:
      - python-psycopg2
      - libldap2-dev
      - libsasl2-dev
      - build-essential
      - ffmpeg
      - libjpeg-dev
      - libmagic-dev
      - libpq-dev
      - python3-dev
      - python3-venv
      - python3-psycopg2
      - gpg
    state: present

- name: "Install pgdg package signing key (Debian/pgdg)"
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    id: ACCC4CF8
  register: __postgresql_apt_key_result
  until: __postgresql_apt_key_result is succeeded
  retries: 5
  delay: 5

- name: "Install pgdg repository (Debian/pgdg)"
  apt_repository:
    repo: "deb {{ FUNKWHALE_DB_REPO }}/ {{ ansible_distribution_release }}-pgdg main"
    state: present
    update_cache: true

- name: "Prepare of ENV.INFRA for Funkwhale"
  package:
    name:
      - "postgresql-{{ FUNKWHALE_DB_VER }}"
      - "postgresql-client-{{ FUNKWHALE_DB_VER }}"
      - redis-server
      - nginx
    state: present

- name: "Find out pg_hba.conf"
  ansible.builtin.stat:
    path: "/etc/postgresql/{{ FUNKWHALE_DB_VER }}/main/pg_hba.conf"
  register: postgres_data

- name: "Start SystemD unit postgresql {{ FUNKWHALE_DB_VER }}"
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: true
  register: postgres_started
  when: postgres_data.stat.exists

- name: "Ensure of string 'host	all	all	127.0.0.1/32	md5'"
  lineinfile:
    name: "/etc/postgresql/{{ FUNKWHALE_DB_VER }}/main/pg_hba.conf"
    line: "host	all	all	127.0.0.1/32	md5"
    state: absent
  check_mode: true
  changed_when: false
  register: string_host4_md5

- debug:
    var: string_host4_md5

- debug:
    msg: "Yes, line string_host4_md5 exists."
  when: string_host4_md5.found

- debug:
    msg: "Line string_host4_md5 does NOT exist."
  when: not string_host4_md5.found

- debug:
    var: postgres_hba01

- name: "Create access from local user postgres on database all"
  community.postgresql.postgresql_pg_hba:
    dest: "/etc/postgresql/{{ FUNKWHALE_DB_VER }}/main/pg_hba.conf"
    contype: local
    users: postgres
    databases: all
    method: trust
    state: present
  register: postgres_hba02
  when: postgres_data.stat.exists

- name: "Ensure of string 'host	all	all	127.0.0.1/32	trust'"
  lineinfile:
    name: "/etc/postgresql/{{ FUNKWHALE_DB_VER }}/main/pg_hba.conf"
    line: "host	all	all	127.0.0.1/32	trust"
    state: absent
  check_mode: true
  changed_when: false
  register: string_host4_trust

- name: "Create access from host user funkwhale on database all"
  community.postgresql.postgresql_pg_hba:
    dest: "/etc/postgresql/{{ FUNKWHALE_DB_VER }}/main/pg_hba.conf"
    contype: host
    users: all
    source: "{{ item }}"
    databases: all
    method: trust
    state: present
  loop:
    - "127.0.0.1/32"
    - "::1/128"
  register: postgres_hba03
  when: not string_host4_trust.found

- debug:
    msg: "Yes, line string_host4_md5 exists."
  when: string_host4_trust.found

- debug:
    msg: "Line string_host4_md5 does NOT exist."
  when: not string_host4_trust.found

- name: "Restart SystemD unit postgresql {{ FUNKWHALE_DB_VER }}"
  ansible.builtin.systemd:
    state: restarted
    name: "postgresql@{{ FUNKWHALE_DB_VER }}-main"
    enabled: true
  register: postgres_restart
  when: ( postgres_hba02.changed and postgres_hba03.changed )

- name: "Create database for app.funkwhale"
  community.postgresql.postgresql_db:
    name: "{{ item }}"
    state: present
    encoding: UTF-8
    template: template0
  loop:
    - "{{ funkwhale_db_user }}"
    - "{{ funkwhale_db }}"
  when: postgres_restart.changed

- name: "Create {{ funkwhale_db_user }} user"
  community.postgresql.postgresql_user:
    state: present
    name: "{{ funkwhale_db_user }}"
    password: ""
    role_attr_flags: SUPERUSER
  when: postgres_restart.changed

- name: "Grant db {{ funkwhale_db_user }} access to {{ funkwhale_db }}"
  community.postgresql.postgresql_privs:
    type: database
    database: "{{ item }}"
    roles: "{{ funkwhale_db_user }}"
    grant_option: true
    privs: all
  loop:
    - "{{ funkwhale_db_user }}"
    - "{{ funkwhale_db }}"
  when: postgres_restart.changed

- name: "Configure front reverse-proxy.nginx"
  template:
    src: funkwhale.conf.j2
    dest: "{{ FUNKWHALE_NGINX_SERVER_CONF }}funkwhale.conf"
  tags: molecule-notest